"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodash = require("lodash");

var _Error = _interopRequireDefault(require("../../components/Error"));

var _Label = _interopRequireDefault(require("../../components/Label"));

var _Description = _interopRequireDefault(require("../../styled/Description"));

var _ErrorMessage = _interopRequireDefault(require("../../styled/ErrorMessage"));

var _input = require("../../commonPropTypes/input");

var _Checkbox = _interopRequireDefault(require("../../components/Checkbox"));

var _DatePicker = _interopRequireDefault(require("../../components/DatePicker"));

var _Enumeration = _interopRequireDefault(require("../../components/Enumeration"));

var _InputNumber = _interopRequireDefault(require("../../components/InputNumber"));

var _InputText = _interopRequireDefault(require("../../components/InputText"));

var _Select = _interopRequireDefault(require("../../components/Select"));

var _Textarea = _interopRequireDefault(require("../../components/Textarea"));

var _TimePicker = _interopRequireDefault(require("../../components/TimePicker"));

var _Toggle = _interopRequireDefault(require("../../components/Toggle"));

var _UnknowInput = _interopRequireDefault(require("../../components/UnknowInput"));

var _DateTime = _interopRequireDefault(require("../DateTime"));

var _Wrapper = _interopRequireDefault(require("./Wrapper"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var inputs = {
  bool: _Toggle["default"],
  checkbox: _Checkbox["default"],
  date: _DatePicker["default"],
  datetime: _DateTime["default"],
  "enum": _Enumeration["default"],
  number: _InputNumber["default"],
  text: _InputText["default"],
  textarea: _Textarea["default"],
  time: _TimePicker["default"],
  select: _Select["default"],
  email: _InputText["default"],
  password: _InputText["default"],
  search: _InputText["default"]
};

function Inputs(_ref) {
  var customInputs = _ref.customInputs,
      description = _ref.description,
      label = _ref.label,
      name = _ref.name,
      _onChange = _ref.onChange,
      type = _ref.type,
      validations = _ref.validations,
      value = _ref.value,
      rest = _objectWithoutProperties(_ref, ["customInputs", "description", "label", "name", "onChange", "type", "validations", "value"]);

  var inputValue;

  switch (type) {
    case 'checkbox':
    case 'bool':
      inputValue = value || false;
      break;

    default:
      inputValue = value || '';
  }

  var allInputs = Object.assign(inputs, customInputs);
  var InputComponent = allInputs[type] || _UnknowInput["default"];

  if (type === (0, _lodash.get)(customInputs, 'type', '')) {
    return _react["default"].createElement(InputComponent, {
      description: description,
      label: label,
      name: name,
      onChange: _onChange,
      type: type,
      validations: validations,
      value: value
    });
  }

  return _react["default"].createElement(_Error["default"], {
    name: name,
    type: type,
    validations: validations
  }, function (_ref2) {
    var canCheck = _ref2.canCheck,
        onBlur = _ref2.onBlur,
        error = _ref2.error,
        dispatch = _ref2.dispatch;
    return _react["default"].createElement(_Wrapper["default"], {
      error: error
    }, type !== 'checkbox' && _react["default"].createElement(_Label["default"], {
      htmlFor: name
    }, label), _react["default"].createElement(InputComponent, _extends({}, rest, {
      message: label,
      name: name,
      onBlur: onBlur,
      onChange: function onChange(e) {
        if (!canCheck) {
          dispatch({
            type: 'SET_CHECK'
          });
        }

        dispatch({
          type: 'SET_ERROR',
          error: null
        });

        _onChange(e);
      },
      type: type,
      value: inputValue
    })), !error && _react["default"].createElement(_Description["default"], null, description), error && _react["default"].createElement(_ErrorMessage["default"], null, error));
  });
}

Inputs.defaultProps = _objectSpread({}, _input.commonDefaultProps, {
  customInputs: null,
  description: null,
  label: null,
  onChange: function onChange() {}
});
Inputs.propTypes = _objectSpread({}, _input.commonPropTypes, {
  customInputs: _propTypes["default"].object,
  description: _propTypes["default"].string,
  label: _propTypes["default"].string,
  onChange: function onChange() {}
});
var _default = Inputs;
exports["default"] = _default;