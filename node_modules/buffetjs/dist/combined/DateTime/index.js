"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.getTimeObject = exports.getTimeString = void 0;

var _react = _interopRequireWildcard(require("react"));

var _moment = _interopRequireDefault(require("moment"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactMomentProptypes = _interopRequireDefault(require("react-moment-proptypes"));

var _input = require("../../commonPropTypes/input");

var _DatePicker = _interopRequireDefault(require("../../components/DatePicker"));

var _TimePicker = _interopRequireDefault(require("../../components/TimePicker"));

var _Wrapper = _interopRequireDefault(require("./Wrapper"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var UNITS = ['hour', 'minute', 'second'];

var getTimeString = function getTimeString(time) {
  var currTime = time || (0, _moment["default"])();
  var timeObj = getTimeObject(currTime);
  var timeString = Object.keys(timeObj).map(function (key) {
    return timeObj[key] < 10 ? "0".concat(timeObj[key]) : timeObj[key];
  }).join(':');
  return timeString;
};

exports.getTimeString = getTimeString;

var getTimeObject = function getTimeObject(time) {
  var timeObj = {};
  UNITS.forEach(function (unit) {
    timeObj[unit] = time.get(unit);
  });
  return timeObj;
};

exports.getTimeObject = getTimeObject;

function DateTime(_ref) {
  var name = _ref.name,
      onChange = _ref.onChange,
      value = _ref.value,
      rest = _objectWithoutProperties(_ref, ["name", "onChange", "value"]);

  var _useState = (0, _react.useState)((0, _moment["default"])()),
      _useState2 = _slicedToArray(_useState, 2),
      timestamp = _useState2[0],
      setTimestamp = _useState2[1];

  var setTime = function setTime(time) {
    var _time$split = time.split(':'),
        _time$split2 = _slicedToArray(_time$split, 3),
        hour = _time$split2[0],
        minute = _time$split2[1],
        second = _time$split2[2];

    var timeObj = {
      hour: hour,
      minute: minute,
      second: second
    };
    timestamp.set(timeObj);
    setDate(timestamp);
  };

  var setDate = function setDate(date, time) {
    var newDate = time || date;
    date.set(getTimeObject(newDate));
    date.toISOString();
    date.format();
    setTimestamp(date);
    onChange({
      target: {
        name: name,
        type: 'date',
        value: date
      }
    });
  };

  (0, _react.useEffect)(function () {
    if (!!value && (0, _moment["default"])(value).isValid()) {
      var newDate = value._isAMomentObject === true ? value : (0, _moment["default"])(value);
      setDate(newDate);
    }
  }, [value]);
  return _react["default"].createElement(_Wrapper["default"], null, _react["default"].createElement(_DatePicker["default"], _extends({}, rest, {
    name: "date",
    onChange: function onChange(_ref2) {
      var target = _ref2.target;
      setDate(target.value, timestamp);
    },
    value: timestamp
  })), _react["default"].createElement(_TimePicker["default"], {
    name: "time",
    onChange: function onChange(_ref3) {
      var target = _ref3.target;
      setTime(target.value);
    },
    seconds: false,
    value: getTimeString(timestamp)
  }));
}

DateTime.defaultProps = _objectSpread({}, _input.commonDefaultProps, {
  onChange: function onChange() {},
  value: null,
  withDefaultValue: true
});
DateTime.propTypes = _objectSpread({}, _input.commonPropTypes, {
  onChange: _propTypes["default"].func,
  value: _propTypes["default"].oneOfType([_reactMomentProptypes["default"].momentObj, _propTypes["default"].string, _propTypes["default"].instanceOf(Date)]),
  withDefaultValue: _propTypes["default"].bool
});
var _default = DateTime;
exports["default"] = _default;