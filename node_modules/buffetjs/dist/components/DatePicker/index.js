"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _moment = _interopRequireDefault(require("moment"));

var _reactMomentProptypes = _interopRequireDefault(require("react-moment-proptypes"));

require("react-dates/initialize");

var _reactDates = require("react-dates");

var _freeRegularSvgIcons = require("@fortawesome/free-regular-svg-icons");

var _reactFontawesome = require("@fortawesome/react-fontawesome");

var _input = require("../../commonPropTypes/input");

var _InputText = _interopRequireDefault(require("../InputText"));

var _Datepicker = _interopRequireDefault(require("../../styled/Datepicker"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DatePicker = function (_React$PureComponent) {
  _inherits(DatePicker, _React$PureComponent);

  function DatePicker() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, DatePicker);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DatePicker)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      date: null,
      isFocused: false,
      visible: false
    };

    _this.handleDateChange = function (date) {
      var _this$props = _this.props,
          name = _this$props.name,
          onChange = _this$props.onChange;

      if ((0, _moment["default"])(date).isValid()) {
        _this.setState({
          date: date,
          visible: false
        }, function () {
          return onChange({
            target: {
              name: name,
              type: 'date',
              value: date
            }
          });
        });
      }
    };

    _this.handleFocusChange = function (_ref) {
      var focused = _ref.focused;

      _this.setState({
        isFocused: focused
      });
    };

    _this.handleOutsideClick = function () {
      _this.setState({
        visible: false
      });
    };

    _this.showDatepicker = function () {
      _this.setState({
        visible: true
      });
    };

    return _this;
  }

  _createClass(DatePicker, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props2 = this.props,
          value = _this$props2.value,
          withDefaultValue = _this$props2.withDefaultValue;
      var date = null;

      if (withDefaultValue && !value) {
        date = (0, _moment["default"])();
      }

      if (!!value && (0, _moment["default"])(value).isValid()) {
        date = value._isAMomentObject === true ? value : (0, _moment["default"])(value);
      }

      this.setState({
        date: date
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          className = _this$props3.className,
          displayFormat = _this$props3.displayFormat,
          id = _this$props3.id,
          name = _this$props3.name;
      var _this$state = this.state,
          date = _this$state.date,
          isFocused = _this$state.isFocused,
          visible = _this$state.visible;
      return _react["default"].createElement(_Datepicker["default"], {
        className: className
      }, _react["default"].createElement("div", null, _react["default"].createElement(_InputText["default"], {
        type: "text",
        name: "start_date",
        id: id || name,
        value: (0, _moment["default"])(date).format(displayFormat),
        readOnly: true,
        icon: _react["default"].createElement(_reactFontawesome.FontAwesomeIcon, {
          icon: _freeRegularSvgIcons.faCalendarAlt
        }),
        onClick: this.showDatepicker
      })), visible && _react["default"].createElement(_reactDates.DayPickerSingleDateController, {
        date: date,
        focused: isFocused,
        numberOfMonths: 1,
        onFocusChange: this.handleFocusChange,
        onDateChange: this.handleDateChange,
        onOutsideClick: this.handleOutsideClick
      }));
    }
  }]);

  return DatePicker;
}(_react["default"].PureComponent);

DatePicker.defaultProps = _objectSpread({}, _input.uncontrolledDefaultProps, {
  displayFormat: 'MMMM DD, YY',
  id: 'date',
  value: null,
  withDefaultValue: true
});
DatePicker.propTypes = _objectSpread({}, _input.uncontrolledPropTypes, {
  displayFormat: _propTypes["default"].string,
  id: _propTypes["default"].string,
  name: _propTypes["default"].string.isRequired,
  value: _propTypes["default"].oneOfType([_reactMomentProptypes["default"].momentObj, _propTypes["default"].string]),
  withDefaultValue: _propTypes["default"].bool
});
var _default = DatePicker;
exports["default"] = _default;