"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _input = require("../../commonPropTypes/input");

var _InputText = _interopRequireWildcard(require("../../styled/InputText"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _IconWrapper = _interopRequireDefault(require("../../styled/InputText/IconWrapper"));

var _PrefixIcon = _interopRequireDefault(require("./PrefixIcon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function InputText(_ref) {
  var autoFocus = _ref.autoFocus,
      icon = _ref.icon,
      id = _ref.id,
      message = _ref.message,
      name = _ref.name,
      onChange = _ref.onChange,
      tabIndex = _ref.tabIndex,
      type = _ref.type,
      value = _ref.value,
      className = _ref.className,
      rest = _objectWithoutProperties(_ref, ["autoFocus", "icon", "id", "message", "name", "onChange", "tabIndex", "type", "value", "className"]);

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      showPassword = _useState2[0],
      togglePassword = _useState2[1];

  return _react["default"].createElement(_InputText.InputWrapper, {
    className: className
  }, _react["default"].createElement(_PrefixIcon["default"], {
    icon: icon,
    type: type
  }), type === 'password' && _react["default"].createElement("button", {
    type: "button",
    onClick: function onClick() {
      return togglePassword(!showPassword);
    },
    className: showPassword ? 'shown' : ''
  }, _react["default"].createElement(_IconWrapper["default"], {
    background: false
  }, _react["default"].createElement(_Icon["default"], {
    icon: type
  }))), _react["default"].createElement(_InputText["default"], _extends({
    autoFocus: autoFocus,
    id: id || name,
    name: name,
    onChange: onChange,
    tabIndex: tabIndex,
    type: showPassword ? 'text' : type,
    value: value,
    icon: icon
  }, rest)));
}

InputText.defaultProps = _objectSpread({}, _input.commonDefaultProps, _input.uncontrolledDefaultProps, {
  type: 'text',
  value: '',
  icon: null
});
InputText.propTypes = _objectSpread({}, _input.commonPropTypes, _input.uncontrolledPropTypes, {
  icon: _propTypes["default"].node,
  type: _propTypes["default"].string,
  value: _propTypes["default"].string
});
var _default = InputText;
exports["default"] = _default;